<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="directoryEntry1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>